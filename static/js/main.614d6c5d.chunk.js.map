{"version":3,"sources":["components/Card.js","components/CardList.js","components/Reset.js","components/TypeCash.js","components/ClickCash.js","components/StatsBox.js","components/MainCounter.js","components/Scroll.js","containers/upgrades.js","components/SearchBox.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","upgradeId","name","cost","effect","owned","id","className","alt","src","CardList","upgrades","map","user","i","dollarIncome","clickIncome","Reset","resetButton","onClick","TypeCash","onTypeChange","dollarTypeInvoice","searchChange","dollarTypeIncome","cashOut","htmlFor","type","maxLength","placeholder","onChange","ClickCash","clickCashOut","StatsBox","hoursPassed","daysPassed","yearsPassed","Math","round","MainCounter","mainCounter","Scroll","props","style","overflowY","border","height","boxsizing","children","SearchBox","searchfield","App","event","setState","state","onSearchChange","target","value","saveGame","localSaveObj","localUpgrades","localSaveObjJSON","JSON","stringify","localStorage","setItem","Object","entries","key","localUpgradesJSON","payout","incomeSource","console","log","document","getElementById","noUpgrades","upgradeID","classList","add","remove","tickerInterval","setInterval","this","upgradeCost","upgradeDollarIncome","upgradeClickIncome","upgradeTypeIncome","addEventListener","arg1","arg2","arg3","arg4","arg5","idUpgrade","currentUpgrade","buyUpgrades","childNodes","innerText","clickUpgrade","filteredUpgrades","filter","robot","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"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","file":"static/js/main.614d6c5d.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({upgradeId, name, cost, effect, owned}) => {\r\n    if (owned == false){\r\n        return(\r\n            <div  id = {'upgrade' + upgradeId} className='tc bg-light-green dib br3 ma2 grow bw2 shadow-5'>\r\n                <img alt='roboimg' src={`https://robohash.org/${upgradeId}?200x200`}/>\r\n                <div>\r\n                    <h2>{name}</h2>\r\n                    <p>{effect}</p>\r\n                    <h2>Only ${cost}</h2>\r\n                    \r\n                </div>\r\n            </div>\r\n        );\r\n    } else {\r\n        return(\r\n            <div  id = {'upgrade' + upgradeId} className='tc bg-light-yellow dib br3 ma2 grow bw2 shadow-5'>\r\n                <img alt='roboimg' src={`https://robohash.org/${upgradeId}?200x200`}/>\r\n                <div>\r\n                    <h2>{name}</h2>\r\n                    <p>{effect}</p>\r\n                    <h2>OWNED</h2>\r\n                    \r\n                </div>\r\n            </div>\r\n        );\r\n\r\n    };\r\n\r\n\r\n}\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({upgrades}) => {\r\n\r\n    return(\r\n    <div>\r\n        \r\n        {\r\n            upgrades.map((user, i) => {\r\n                return(\r\n                    <Card \r\n                        key={i} \r\n                        upgradeId={upgrades[i].id} \r\n                        name={upgrades[i].name} \r\n                        cost={upgrades[i].cost} \r\n                        effect={upgrades[i].effect} \r\n                        dollarIncome={upgrades[i].dollarIncome} \r\n                        clickIncome={upgrades[i].clickIncome} \r\n                        owned={upgrades[i].owned}\r\n                        />\r\n                );\r\n            })\r\n        }\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst Reset = ({resetButton}) => {\r\n    return(\r\n        <div>\r\n            <button className='pa2'  onClick={resetButton}>RESET</button>  \r\n        </div>\r\n    );\r\n}\r\nexport default Reset;","import React from 'react';\r\nimport './typeCash.css';\r\n\r\nconst TypeCash = ({ onTypeChange, searchChange, dollarTypeInvoice, dollarTypeIncome, cashOut }) => {\r\n\r\n\r\n    return (\r\n        <div className='pa2'>\r\n            <h1>Type for cashOut</h1>\r\n            <label className='yellow' htmlFor='inputText'>Income per character = $ {dollarTypeIncome}</label>\r\n            <br></br>\r\n            <textarea \r\n            id = 'inputText'\r\n            className='pa3 ba b--green bg-lightest-blue'\r\n            type='text' \r\n            maxLength=\"500\"\r\n            placeholder='write a book'\r\n            onChange = {onTypeChange}\r\n            />\r\n            <br></br>\r\n            <button className='pa1 f2 grow bw2 shadow-5' id='cashOut' onClick={cashOut}>Sell text for ${dollarTypeInvoice}</button>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default TypeCash;","import React from 'react';\r\nimport './clickCash.css';\r\n\r\nconst ClickCash = ({ clickIncome, clickCashOut }) => {\r\n\r\n\r\n    return (\r\n        <div className='pa2'>\r\n            <h1>Click for Cash!</h1>\r\n            \r\n            <br></br>\r\n            <label className='yellow'>Buck a Clicker</label>\r\n            <br></br>\r\n            <button className='pa4 f2 grow bw2 shadow-5'  onClick={clickCashOut}>${clickIncome}</button>\r\n        </div>\r\n    );\r\n\r\n    // const cashOut = document.getElementById('cashOut');\r\n    // cashOut.addEventListener('click', function (event) {\r\n    //     alert('Element clicked through function!');\r\n    //   });\r\n}\r\n\r\nexport default ClickCash;","import React from 'react';\r\n\r\nconst StatsBox = ({ dollarIncome, hoursPassed, daysPassed, yearsPassed}) => {\r\n\r\n\r\n    return (\r\n        <div className='pa2 light-gray'>\r\n            <p>Your Current Income is ${dollarIncome} / hour</p>\r\n            <p>{Math.round(yearsPassed)} years / {Math.round(daysPassed)} days / {hoursPassed} hours passed</p>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default StatsBox;","import React from 'react';\r\n\r\nconst MainCounter = ({mainCounter}) => {\r\n    return(\r\n        <div className='tc bg-light-green dib br3 ma2 grow bw2 shadow-5 pa3'>\r\n            <div>\r\n                <h2>Total ${mainCounter}</h2>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default MainCounter;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{\r\n            overflowY: 'scroll', \r\n            border: '2px solid black', \r\n            height: '800px',\r\n            boxsizing: 'border-box'\r\n        }}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Scroll;","export const upgrades = [\n  {\n    id: 0,\n    name: 'Buck a Click',\n    cost: 10,\n    effect: '+$5 per click',\n    clickIncome: 5,\n    dollarIncome: 0,\n    dollarTypeIncome: 0,\n    owned: false\n  },\n  {\n    id: 1,\n    name: 'Childs alowance',\n    cost: 100,\n    effect: '1 dollar an hour..',\n    clickIncome: 0,\n    dollarIncome: 1,\n    dollarTypeIncome: 0,\n    owned: false\n  },\n  {\n    id: 2,\n    name: 'Learn to Write to do',\n    cost: 200,\n    effect: '+$5 per character',\n    clickIncome: 0,\n    dollarIncome: 0,\n    dollarTypeIncome: 5,\n    owned: false\n  },\n  {\n    id: 3,\n    name: 'Buck a Clicker',\n    cost: 10,\n    effect: '$5 clicker',\n    clickIncome: 5,\n    dollarIncome: 0,\n    dollarTypeIncome: 0,\n    owned: false\n  },\n  {\n    id: 4,\n    name: 'Buck a Clicker',\n    cost: 10,\n    effect: '$5 clicker',\n    clickIncome: 5,\n    dollarIncome: 0,\n    dollarTypeIncome: 0,\n    owned: false\n  },\n  {\n    id: 5,\n    name: 'Buck a Clicker',\n    cost: 10,\n    effect: '$5 clicker',\n    clickIncome: 5,\n    dollarIncome: 0,\n    dollarTypeIncome: 0,\n    owned: false\n  },\n  {\n    id: 6,\n    name: 'Buck a Clicker',\n    cost: 10,\n    effect: '$5 clicker',\n    clickIncome: 5,\n    dollarIncome: 0,\n    dollarTypeIncome: 0,\n    owned: false\n  }\n];\n","import React from 'react';\r\n\r\nconst SearchBox = ({ searchfield, searchChange }) => {\r\n\r\n    return (\r\n        <div className='pa2'>\r\n            <h1>Upgrades</h1>\r\n            <input \r\n            className='pa3 ba b--green bg-lightest-blue'\r\n            type='search' \r\n            placeholder='search '\r\n            onChange = {searchChange}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBox;","import React, { Component } from 'react';\r\nimport CardList from '../components/CardList.js';\r\nimport Reset from '../components/Reset.js';\r\nimport TypeCash from '../components/TypeCash.js';\r\nimport ClickCash from '../components/ClickCash.js';\r\nimport StatsBox from '../components/StatsBox.js';\r\n// import UpgradeBox from '../components/UpgradeBox.js';\r\nimport MainCounter from '../components/MainCounter.js';\r\nimport Scroll from '../components/Scroll.js';\r\nimport { upgrades } from './upgrades.js';\r\nimport './App.css';\r\nimport SearchBox from '../components/SearchBox.js';\r\n\r\n\r\nclass App extends Component {\r\n    constructor(){\r\n        super()       \r\n        this.state = {\r\n            tickerInterval: 200,\r\n            upgrades: upgrades,\r\n            searchfield: '',\r\n            mainCounter: 0,\r\n            hoursPassed: 0,\r\n            daysPassed: 0,\r\n            yearsPassed: 0,\r\n            dollarTypeIncome: 1,\r\n            dollarTypeInvoice: 0,\r\n            dollarIncome: 0,\r\n            clickIncome: 1,\r\n        }\r\n\r\n        // // Retrieving localSaveFile:\r\n        // let localSaveFile, activeSaveFile;\r\n        // localSaveFile = localStorage.getItem(\"localSaveFile\");\r\n        // activeSaveFile = JSON.parse(localSaveFile);\r\n        // // load save into this.state\r\n        // this.state.mainCounter = activeSaveFile.mainCounter;\r\n        // this.state.hoursPassed = activeSaveFile.hoursPassed;\r\n        // this.state.daysPassed = activeSaveFile.daysPassed;\r\n        // this.state.yearsPassed = activeSaveFile.yearsPassed;\r\n        // this.state.dollarTypeIncome = activeSaveFile.dollarTypeIncome;\r\n        // this.state.dollarTypeInvoice = activeSaveFile.dollarTypeInvoice;\r\n        // this.state.dollarIncome = activeSaveFile.dollarIncome;\r\n        // this.state.clickIncome = activeSaveFile.clickIncome;   \r\n\r\n        // // Retrieving localUpgrades:\r\n        // let localUpgrades = localStorage.getItem(\"localUpgrades\");\r\n        // let activeUpgrades = JSON.parse(localUpgrades);\r\n        \r\n        // for (const [key] of Object.entries(activeUpgrades)) {\r\n        //     let x = activeUpgrades[key].value.owned;\r\n        //     console.log('activeUpgrades[key].value.owned', x);\r\n        //     this.state.upgrades[key].owned =  x ;\r\n        // }\r\n    }\r\n\r\n\r\n\r\n    componentDidMount() {  \r\n\r\n\r\n        // Applys Upgrade\r\n        const clickUpgrade = (event, idUpgrade, upgradeCost, upgradeDollarIncome, upgradeClickIncome, dollarTypeIncome) => {\r\n            let currentUpgrade = \"upgrade\"+idUpgrade;\r\n            console.log('click');\r\n            if (this.state.mainCounter >= upgradeCost && this.state.upgrades[idUpgrade].owned === false){\r\n                console.log('can afford');\r\n                // buy item\r\n                this.setState((state) => ({ dollarIncome: state.dollarIncome + upgradeDollarIncome}));\r\n                this.setState((state) => ({ clickIncome: state.clickIncome + upgradeClickIncome}));\r\n                this.setState((state) => ({ mainCounter: state.mainCounter - upgradeCost}));\r\n                this.setState((state) => ({ dollarTypeIncome: state.dollarTypeIncome + dollarTypeIncome}));\r\n                \r\n\r\n                // set bought item to owned\r\n                const buyUpgrades = this.state.upgrades;\r\n                buyUpgrades[idUpgrade].owned = true;\r\n                this.setState((state) => ({ upgrades: buyUpgrades}));\r\n\r\n                // owned\r\n                document.getElementById(currentUpgrade).childNodes[1].childNodes[0].innerText= 'Owned';\r\n            } else if (this.state.mainCounter <= upgradeCost) {\r\n                // cant afford\r\n            }     \r\n        }\r\n        \r\n        // Main Ticker\r\n        setInterval(() => {\r\n            const { hoursPassed, daysPassed } = this.state;\r\n            if (hoursPassed < 24){\r\n                this.setState((state) => ({ hoursPassed: state.hoursPassed + 1}));\r\n            }\r\n            else {\r\n                this.setState((state) => ({ daysPassed: state.daysPassed + 1}));\r\n                this.setState((state) => ({ hoursPassed: 0}));\r\n                if (daysPassed === 365){\r\n                    this.setState((state) => ({ daysPassed: 0}));\r\n                    this.setState((state) => ({ yearsPassed: state.yearsPassed + 1}));\r\n                }\r\n            }  \r\n            this.setState((state) => ({ mainCounter: state.mainCounter + state.dollarIncome}));\r\n            this.saveGame();\r\n        }, this.state.tickerInterval);\r\n\r\n\r\n\r\n        // Loop thru upgrade list\r\n        for (const [key] of Object.entries(this.state.upgrades)) {\r\n            let upgradeID = 'upgrade' + this.state.upgrades[key].id;\r\n            let upgradeCost = this.state.upgrades[key].cost;\r\n            let upgradeDollarIncome = this.state.upgrades[key].dollarIncome;\r\n            let upgradeClickIncome = this.state.upgrades[key].clickIncome;\r\n            let upgradeTypeIncome = this.state.upgrades[key].dollarTypeIncome;\r\n            console.log(upgradeID, upgradeDollarIncome, upgradeClickIncome, upgradeCost, upgradeTypeIncome);\r\n            // add click listener to each card \r\n\r\n            document.getElementById(upgradeID).classList.add(\"bg-light-green\");\r\n            document.getElementById(upgradeID).classList.remove(\"bg-light-yellow\");              \r\n            document.getElementById(upgradeID).addEventListener(\"click\", function(event, arg1, arg2, arg3, arg4, arg5){\r\n                clickUpgrade(event, key, upgradeCost, upgradeDollarIncome, upgradeClickIncome, upgradeTypeIncome); \r\n            }, false);\r\n\r\n            // check if cards are owned\r\n            if (this.state.upgrades[key].owned === true){                \r\n                // document.getElementById(upgradeID).childNodes[1].childNodes[0].innerText= 'Owned';\r\n                document.getElementById(upgradeID).classList.remove(\"bg-light-green\");\r\n                document.getElementById(upgradeID).classList.add(\"bg-light-yellow\");\r\n            }\r\n\r\n        }\r\n    }   \r\n\r\n\r\n\r\n\r\n    // add $ for each char typed\r\n    onTypeChange = (event) => {\r\n        this.setState((state) => ({ dollarTypeInvoice: state.dollarTypeInvoice + state.dollarTypeIncome }));\r\n    }\r\n    // Filter\r\n    onSearchChange = (event) => {\r\n        this.setState({searchfield: event.target.value})\r\n    }\r\n\r\n    // SAVE to local storage\r\n    saveGame = () => { \r\n        // Storing data:\r\n        let localSaveObj;\r\n        localSaveObj = {\r\n            hoursPassed: this.state.hoursPassed,\r\n            daysPassed: this.state.daysPassed,\r\n            yearsPassed: this.state.yearsPassed,\r\n            mainCounter: this.state.mainCounter,\r\n            dollarTypeIncome: this.state.dollarTypeIncome,\r\n            dollarTypeInvoice: this.state.dollarTypeInvoice,\r\n            dollarIncome: this.state.dollarIncome,\r\n            clickIncome: this.state.clickIncome,\r\n        };\r\n        let localSaveObjJSON = JSON.stringify(localSaveObj);\r\n        localStorage.setItem(\"localSaveFile\", localSaveObjJSON);\r\n\r\n\r\n\r\n        // Save upgrades Obj to Local Storage\r\n        let localUpgrades;\r\n        localUpgrades = {};\r\n\r\n        for (const [key, value] of Object.entries(this.state.upgrades)) {\r\n            localUpgrades[key] = { value,};\r\n        }\r\n        let localUpgradesJSON = JSON.stringify(localUpgrades);\r\n        localStorage.setItem(\"localUpgrades\", localUpgradesJSON);\r\n    }\r\n\r\n    // PAY into Total\r\n    payout = (incomeSource) => {\r\n        console.log(incomeSource);\r\n        this.setState((state) => ({ mainCounter: state.mainCounter + incomeSource}));\r\n    }\r\n\r\n    // payout textbox cash\r\n    cashOut = () =>{\r\n        this.payout(this.state.dollarTypeInvoice);\r\n        this.setState((state) => ({ dollarTypeInvoice: 0}));\r\n        document.getElementById(\"inputText\").value = \"Type for money\";\r\n    }\r\n    // payout click cash\r\n    clickCashOut = () => {\r\n        this.payout(this.state.clickIncome);\r\n    }\r\n    // Reset game\r\n    resetButton = () => {\r\n        console.log('reset');\r\n        this.setState((state) => ({ mainCounter: 0}));\r\n        this.setState((state) => ({ hoursPassed: 0}));\r\n        this.setState((state) => ({ daysPassed: 0}));\r\n        this.setState((state) => ({ yearsPassed: 0}));\r\n        this.setState((state) => ({ dollarTypeIncome: 1}));\r\n        this.setState((state) => ({ dollarTypeInvoice: 0}));\r\n        this.setState((state) => ({ dollarIncome: 0}));\r\n        this.setState((state) => ({ clickIncome: 1}));\r\n        \r\n        // reset upgrades\r\n        for (const [key] of Object.entries(this.state.upgrades)) {\r\n            const noUpgrades = this.state.upgrades;\r\n            noUpgrades[key].owned = false;         \r\n            this.setState((state) => ({ upgrades: noUpgrades}));     \r\n        }\r\n\r\n        // reset color of cards\r\n        for (const [key] of Object.entries(this.state.upgrades)) {\r\n            let upgradeID = 'upgrade' + this.state.upgrades[key].id;\r\n            document.getElementById(upgradeID).classList.add(\"bg-light-green\");\r\n            document.getElementById(upgradeID).classList.remove(\"bg-light-yellow\");   \r\n        }\r\n        // window.location.reload();\r\n\r\n    }\r\n    \r\n\r\n\r\n    render()   {\r\n        const { upgrades, searchfield, mainCounter, dollarIncome, clickIncome, hoursPassed, daysPassed, yearsPassed, dollarTypeInvoice,dollarTypeIncome } = this.state;\r\n        const filteredUpgrades = upgrades.filter(robot => {\r\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n        })\r\n        // if no data is in robots display loading screen\r\n        return(\r\n                <div className='tc'>\r\n                    <h1 className='f1'>Billionaire!</h1>\r\n                    <MainCounter mainCounter = {mainCounter} />\r\n                    <StatsBox \r\n                    dollarIncome = {dollarIncome} \r\n                    hoursPassed = {hoursPassed} \r\n                    daysPassed = {daysPassed} \r\n                    yearsPassed = {yearsPassed} \r\n                    />\r\n                    <Scroll>\r\n                    <TypeCash \r\n                    onTypeChange = {this.onTypeChange}\r\n                    dollarTypeInvoice ={dollarTypeInvoice}\r\n                    dollarTypeIncome ={dollarTypeIncome}\r\n                    cashOut = {this.cashOut}\r\n                    />\r\n                    <ClickCash\r\n                    clickIncome = {clickIncome}\r\n                    clickCashOut = {this.clickCashOut}\r\n                    />\r\n                    {/* <UpgradeBox/> */}\r\n                    <SearchBox searchChange = {this.onSearchChange} />\r\n                    <CardList upgrades={filteredUpgrades} />\r\n                    </Scroll>\r\n                    <Reset resetButton = {this.resetButton}/>\r\n                </div>     \r\n            ); \r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\nexport default App; \r\n\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App.js'\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n<App/>,\n  document.getElementById('root')\n);\n\n\n{/* <React.StrictMode>\n</React.StrictMode> */}\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}